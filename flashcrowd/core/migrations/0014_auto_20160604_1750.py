# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2016-06-04 17:50
from __future__ import unicode_literals

from django.db import migrations
def create_badges(apps, schema):
    category_model = apps.get_model('core.Badge')
    category_model.objects.create(name="Its dangerous to go alone, take this.", description="World is dangerous place, you should have smthn to fight on your first Contract", level=1, validator="user_tasks.count()")

    category_model.objects.create(name="First Mystery completed", description="Complete 1 Mystery task", level=1, validator="user_tasks.filter(category__slug='mystery').count()>1")
    category_model.objects.create(name="5 Mystery completed", description="Complete 5 Mystery task", level=2, validator="user_tasks.filter(category__slug='mystery').count()>5")
    category_model.objects.create(name="25 Mystery completed", description="Complete 25 Mystery task", level=3, validator="user_tasks.filter(category__slug='mystery').count()>25")
    category_model.objects.create(name="50 Mystery completed", description="Complete 50 Mystery task", level=4, validator="user_tasks.filter(category__slug='mystery').count()>50")
    category_model.objects.create(name="100 Mystery completed", description="Complete 100 Mystery task", level=5, validator="user_tasks.filter(category__slug='mystery').count()>100")
    ##############################
    category_model.objects.create(name="First Geo completed", description="Complete 1 Geo task", level=1, validator="user_tasks.filter(category__slug='geo').count()>1")
    category_model.objects.create(name="5 Geo completed", description="Complete 5 Geo task", level=2, validator="user_tasks.filter(category__slug='geo').count()>5")
    category_model.objects.create(name="25 Geo completed", description="Complete 25 Geo task", level=3, validator="user_tasks.filter(category__slug='geo').count()>25")
    category_model.objects.create(name="50 Geo completed", description="Complete 50 Geo task", level=4, validator="user_tasks.filter(category__slug='geo').count()>50")
    category_model.objects.create(name="100 Geo completed", description="Complete 100 Geo task", level=5, validator="user_tasks.filter(category__slug='geo').count()>100")
    ##############################
    category_model.objects.create(name="First Selfie completed", description="Complete 1 Selfie task", level=1, validator="user_tasks.filter(category__slug='selfie').count()>1")
    category_model.objects.create(name="5 Selfie completed", description="Complete 5 Selfie task", level=2, validator="user_tasks.filter(category__slug='selfie').count()>5")
    category_model.objects.create(name="25 Selfie completed", description="Complete 25 Selfie task", level=3, validator="user_tasks.filter(category__slug='selfie').count()>25")
    category_model.objects.create(name="50 Selfie completed", description="Complete 50 Selfie task", level=4, validator="user_tasks.filter(category__slug='selfie').count()>50")
    category_model.objects.create(name="100 Selfie completed", description="Complete 100 Selfie task", level=5, validator="user_tasks.filter(category__slug='selfie').count()>100")
    ##############################
    category_model.objects.create(name="First Team completed", description="Complete 1 Team task", level=1, validator="user_tasks.filter(category__slug='team').count()>1")
    category_model.objects.create(name="5 Team completed", description="Complete 5 Team task", level=2, validator="user_tasks.filter(category__slug='team').count()>5")
    category_model.objects.create(name="25 Team completed", description="Complete 25 Team task", level=3, validator="user_tasks.filter(category__slug='team').count()>25")
    category_model.objects.create(name="50 Team completed", description="Complete 50 Team task", level=4, validator="user_tasks.filter(category__slug='team').count()>50")
    category_model.objects.create(name="100 Team completed", description="Complete 100 Team task", level=5, validator="user_tasks.filter(category__slug='team').count()>100")
    ##############################
    category_model.objects.create(name="First Stranger completed", description="Complete 1 Stranger task", level=1, validator="user_tasks.filter(category__slug='stranger').count()>1")
    category_model.objects.create(name="5 Stranger completed", description="Complete 5 Stranger task", level=2, validator="user_tasks.filter(category__slug='stranger').count()>5")
    category_model.objects.create(name="25 Stranger completed", description="Complete 25 Stranger task", level=3, validator="user_tasks.filter(category__slug='stranger').count()>25")
    category_model.objects.create(name="50 Stranger completed", description="Complete 50 Stranger task", level=4, validator="user_tasks.filter(category__slug='stranger').count()>50")
    category_model.objects.create(name="100 Stranger completed", description="Complete 100 Stranger task", level=5, validator="user_tasks.filter(category__slug='stranger').count()>100")


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0013_auto_20160604_1503'),
    ]

    operations = [
        migrations.RunPython(create_badges),
    ]
